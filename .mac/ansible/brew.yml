- hosts: localhost
  connection: local
  gather_facts: no
  become_user: no

  # before this task
  #   $ brew install pyenv-virtualenv
  #   $ pyenv install 3.5.0
  #   $ pyenv virtualenv 3.5.0 ansible2
  #   $ pyenv global ansible2
  #   $ pip install ansible

  # e.g.
  # - package_name
  # or
  # { name: package_name, state: package_state, install_options: [with-baz, enable-debug] }
  #
  # state choices: [head, latest, present, absent, linked, unlinked] (default latest)
  # install_options: string or sequence (default none)
  vars:
    homebrew_taps:
      - caskroom/cask
      - homebrew/php
      - homebrew/apache
      - homebrew/completions
      
    homebrew_packages:
      - { name: pyenv-virtualenv }
      
      - { name: readline }
      - { name: openssl }
      - { name: openssl, state: linked, install_options: force } # fix openssl upgrade probrem
      
      - { name: git }
      - { name: hub }
      - { name: tig }
      - { name: git-flow }
      
      - { name: wget }
      - { name: curl }
      - { name: tree }
      - { name: gnu-sed }
      - { name: pwgen }
      - { name: jq }
      - { name: ccat }
      - { name: rmtrash }
      - { name: source-highlight}
      - { name: colordiff }
      
      - { name: go }
      - { name: peco }
      - { name: ghq }
      
      - { name: mysql }
      
      - { name: bash-completion }
      - { name: vagrant-completion }
      
      - { name: httpd24 }
      
      - { name: node }
      
      - { name: php70 }
      - { name: php70-intl }
      - { name: php70-mcrypt }
      - { name: php70-opcache }
      - { name: php70-xdebug }
      - { name: php-cs-fixer }
      - { name: phpmd }
      - { name: composer }
      
      - { name: rbenv }
      - { name: ruby-build }
     
      - { name: bash }
      - { name: vim }
      - { name: zsh }
 
  tasks:
    
    - name: homebrew tap
      homebrew_tap: tap={{ item }} state=present
      with_items: homebrew_taps
    
    - name: brew update
      homebrew: update_homebrew=yes
      ignore_errors: on
    
    - name: brew package install
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: homebrew_packages
      ignore_errors: on
      
    - name: brew cleanup
      shell: $(brew --prefix)/bin/brew cleanup
      register: creanup_result
      changed_when: no
